"""add has_backup field

Revision ID: c3da223e60d8
Revises: d0aa961845b9
Create Date: 2023-09-22 11:10:14.616339

"""
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.orm import sessionmaker

from alembic import op
from cg.store.models import Flowcell

# revision identifiers, used by Alembic.
revision = "c3da223e60d8"
down_revision = "d0aa961845b9"
branch_labels = None
depends_on = None

Session = sessionmaker()


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)

    op.alter_column(
        table_name="application",
        column_name="min_sequencing_depth",
        existing_type=mysql.INTEGER(),
        nullable=False,
    )
    op.add_column(
        table_name="flowcell", column=sa.Column("has_backup", sa.Boolean(), nullable=False)
    )

    # Update has_backup based on sequencer_type
    for flowcell in session.query(Flowcell).all():
        if flowcell.sequencer_type == "novaseqx":
            flowcell.has_backup = False
        else:
            flowcell.has_backup = True
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(table_name="flowcell", column_name="has_backup")
    op.alter_column(
        table_name="application",
        column_name="min_sequencing_depth",
        existing_type=mysql.INTEGER(),
        nullable=True,
    )
    # ### end Alembic commands ###
